---
id:		06
title:  "协作开发项目（BI）遇到的问题!"
date:   2015-12-29 00:47:14
description: "UED以外的同事也太不清楚这边的工作流是怎样进行的，所以难免会有需求与各自安排计划不对称的情况发生，打乱了大家的计划中的计划。"
layout: post
comments: true

---

目前UED团队在协作开发项目（BI）遇到的问题

UED以外的同事也太不清楚这边的工作流是怎样进行的，所以难免会有需求与各自安排计划不对称的情况发生，打乱了大家的计划中的计划。

目前团队的发展趋势

 从前年UED团队建立之初：团队的前端使用最简的结构，甚至最开始的项目不做代码合并，不做包管理，甚至不做代码压缩。易一切从原始和轻量开始，在随着需求和页面慢慢增多的情况下，然后在团队的人精力足够的情况下，制定新方案，搭建新UI组件库，不断增加更灵活的代码，更清晰严密的逻辑，基本的代码版本管理，更多的插件引入，甚至mvc和模块化看，这些都是以后慢慢以软装的形式加入，实现边际成本递减，人员效率也更高。

流程的作用

UED的接手的项目业务需求相当复杂，一个清晰明确的流程是维持工作高效的基石 。在项目团队开发的过程中，处理的需求数量也在增长，需要考虑到团队中成员如何分工配合！这也决定了开发的效率、产品的质量以及团队协作间的配合等因素。
这个流程能为我们解决很多相关的问题. 但流程本身就是一把双刃剑，有利有弊。
一方面，它使我们的需求变得有序，使前端能够在处理一个需求时，不会频繁被其他插队的需求打断。并且因为发布有时间点的设定，所以测试工作会更加严谨，这有助于提升代码的质量。
但另一方面，它额外地增加了做事的成本，就像赶某班火车一样，错过了就只能等下一班，所以也给需求方带来了许多不便，有待改进，不过这可以通过长期的合作而慢慢被弱化，双方达成了一种默契以后，情况会好很多；
重要的是：这些流程规范在小团队里或是非技术驱动的公司积累是相当困难的。

督促需求人员做好相关的规划

有些时候，一些需求的细节还没完全确定，但后面需求方总希望能将他想到的各种细节都实现出来，然后再挑选其中一种做为他的方案，所以需求的变更频繁，然而这样的成本有些高；
一切应该在计划后再去实现， 需求方多花时间地去考虑他们的需求，将尽可能多的情况都想清楚，做好必要的沟通工作，权衡各种利弊之后，再给出一个比较成形的方案。在开始实现。

每周的需求评估

安排好下一周（或者月）的日程，由于需求的优先级和先后顺序都已排定，工作的条理性会更加清晰，需求插队的现象也有明显减少。当然我们也有紧急流程，但是它仅限于处理线上bug以及一些经过多方确认的紧急需求
当一个新功能没有新增基本组件时，那么开发工作就变成了搭积木。后端工程师都是擅长多语言和重构的人，只要前面提到的组件框架设计水平有保证就行；

前端文化

公司的前端由无到有，前端人员作为一个专职岗位存在的价值主要体现在：“叫专业的人干专业的事，解放并提升了产品方的生产力”。翻译成人话就是，前端解放了交互、解放了视觉、解放了开发，并用其高质量的页面开发技能提升了项目的用户体验。
前端团队概念的建立，包括开发团队与设计、后台、产品的配合，想改变他们原有的、已习惯的（从前写到后，一条龙式）开发流程确实是个不小的挑战。

如何提高团队的影响力

用户体验设计应该贯穿于产品从萌芽到出生的整个过程，产品原型、视觉设计、前端开发、后端开发甚至还包括产品测试大家都应该有份。只有各个环节的同学都把这个事儿当事儿了，那么做出来的产品才有可能是好产品。
好的产品，也会让相应的团队显示出自己的能力。



![南京](https://raw.githubusercontent.com/markyun/markyun.github.io/master/assets/images/Nanjing2.jpg)